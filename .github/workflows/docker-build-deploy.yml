name: Build and Deploy with Parallel Jobs

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  # First Job: Build Test Image
  build-test-image:
    name: Build Image for Testing
    runs-on: ubuntu-latest
    permissions:
      packages: write # needed to push docker image to ghcr.io

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push to GHCR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: |
            ghcr.io/alluxu/httpenv:${{ github.run_id }}
            ghcr.io/alluxu/httpenv:latest
          target: test
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64

  # Second Job: Unit Tests
  test-unit:
    name: Unit Tests in Docker
    needs: [build-test-image]  # Depends on build-test-image job
    runs-on: ubuntu-latest
    permissions:
      packages: read

    steps:
      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Run Unit Tests
        run: docker run --rm ghcr.io/alluxu/httpenv:${{ github.run_id }} echo "Running unit tests"

  # Third Job: Integration Tests
  test-integration:
    name: Integration Tests in Docker Compose
    needs: [build-test-image]  # Depends on build-test-image job
    runs-on: ubuntu-latest
    permissions:
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Run Integration Tests in Docker Compose
        run: |
          docker compose -f tests/docker-compose.test.yml up --exit-code-from sut
        env:
          TESTING_IMAGE: ghcr.io/alluxu/httpenv:${{ github.run_id }}

  # Fourth Job: Kubernetes Test Deployment
  test-k3d:
    name: Test Deployment in Kubernetes (k3d)
    needs: [build-test-image]  # Depends on build-test-image job
    runs-on: ubuntu-latest
    permissions:
      packages: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "test-cluster-1"
          args: >-
            --agents 1
            --no-lb
            --k3s-arg "--no-deploy=traefik,servicelb,metrics-server@server:*"

      - name: Smoke Test Deployment in Kubernetes
        run: |
          kubectl create secret docker-registry regcred \
            --docker-server=https://ghcr.io \
            --docker-username=${{ github.actor }} \
            --docker-password=${{ secrets.GH_TOKEN }}
          export TESTING_IMAGE=ghcr.io/alluxu/httpenv:${{ github.run_id }}
          envsubst < manifests/deployment.yaml | kubectl apply -f -
          kubectl rollout status deployment myapp
          kubectl exec deploy/myapp -- curl --fail localhost:8888

  # Fifth Job: Image Security Scan with Trivy
  scan-image:
    name: Scan Image with Trivy
    needs: [build-test-image]  # Depends on build-test-image job
    runs-on: ubuntu-latest
    permissions:
      packages: read
      security-events: write  # To upload SARIF results

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Pull Image for Scanning
        run: docker pull ghcr.io/alluxu/httpenv:${{ github.run_id }}

      - name: Run Trivy for All CVEs
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ghcr.io/alluxu/httpenv:${{ github.run_id }}
          format: table
          exit-code: 0

  # Final Job: Build Final Production Image
  build-final-image:
    name: Build Final Production Image
    needs: [test-unit, test-integration, test-k3d, scan-image]  # Depends on all previous jobs
    runs-on: ubuntu-latest
    permissions:
      packages: write  # Needed to push docker image to ghcr.io

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry (ghcr.io)
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GH_TOKEN }}

      - name: Build and Push Final Image to GHCR
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: ghcr.io/alluxu/httpenv:${{ github.run_id }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
